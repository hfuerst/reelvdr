diff -Nu vdr-1.3.29/status.c vdr/status.c
--- vdr-1.3.29/status.c	2005-01-09 12:51:04.000000000 +0100
+++ vdr/status.c	2005-08-17 12:53:27.357863200 +0200
@@ -59,6 +59,12 @@
       sm->SetAudioChannel(AudioChannel);
 }
 
+void cStatus::MsgTick(void)
+{
+  for (cStatus *sm = statusMonitors.First(); sm; sm = statusMonitors.Next(sm))
+      sm->Tick();
+}
+
 void cStatus::MsgOsdClear(void)
 {
   for (cStatus *sm = statusMonitors.First(); sm; sm = statusMonitors.Next(sm))
diff -Nu vdr-1.3.29/status.h vdr/status.h
--- vdr-1.3.29/status.h	2005-01-09 12:50:21.000000000 +0100
+++ vdr/status.h	2005-08-17 12:53:01.848741176 +0200
@@ -42,6 +42,8 @@
   virtual void SetAudioChannel(int AudioChannel) {}
                // The audio channel has been set to the given value.
                // 0=stereo, 1=left, 2=right, -1=no information available.
+  virtual void Tick(void) {}
+               // This function is called every second.
   virtual void OsdClear(void) {}
                // The OSD has been cleared.
   virtual void OsdTitle(const char *Title) {}
@@ -75,6 +77,7 @@
   static void MsgSetVolume(int Volume, bool Absolute);
   static void MsgSetAudioTrack(int Index, const char * const *Tracks);
   static void MsgSetAudioChannel(int AudioChannel);
+  static void MsgTick(void);
   static void MsgOsdClear(void);
   static void MsgOsdTitle(const char *Title);
   static void MsgOsdStatusMessage(const char *Message);
diff -Nu vdr-1.3.29/vdr.c vdr/vdr.c
--- vdr-1.3.29/vdr.c	2005-07-31 13:25:16.000000000 +0200
+++ vdr/vdr.c	2005-08-17 12:57:56.551939480 +0200
@@ -393,6 +393,7 @@
   bool ForceShutdown = false;
   bool UserShutdown = false;
   bool TimerInVpsMargin = false;
+  time_t LastTickTime = 0;
 
   // Load plugins:
 
@@ -889,6 +890,10 @@
                  Skins.Message(mtInfo, tr("Editing process finished"));
               }
            }
+        if (time(NULL) > LastTickTime) {
+           cStatus::MsgTick();
+           LastTickTime = time(NULL);
+           }
         if (!Interact && ((!cRecordControls::Active() && !cCutter::Active() && (!Interface->HasSVDRPConnection() || UserShutdown)) || ForceShutdown)) {
            time_t Now = time(NULL);
            if (Now - LastActivity > ACTIVITYTIMEOUT) {
