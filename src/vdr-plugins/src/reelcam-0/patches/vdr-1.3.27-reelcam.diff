diff -uNr vdr-1.3.27-1/ci.c vdr-1.3.27-2/ci.c
--- vdr-1.3.27-1/ci.c	2005-04-23 04:53:11.000000000 +0200
+++ vdr-1.3.27-2/ci.c	2005-09-07 17:58:22.000000000 +0200
@@ -455,8 +455,8 @@
 {
   fd = Fd;
   numSlots = NumSlots;
-  for (int s = 0; s < numSlots; s++)
-      ResetSlot(s);
+//  for (int s = 0; s < numSlots; s++) // TB: already done by driver
+//      ResetSlot(s);                  // TB
   cCondWait::SleepMs(2000);
 }
 
@@ -1353,6 +1353,11 @@
   close(fd);
 }
 
+int cCiHandler::GetCaFd(void)
+{
+  return dup(fd);
+}
+
 cCiHandler *cCiHandler::CreateCiHandler(const char *FileName)
 {
   int fd_ca = open(FileName, O_RDWR);
diff -uNr vdr-1.3.27-1/ci.h vdr-1.3.27-2/ci.h
--- vdr-1.3.27-1/ci.h	2005-04-23 04:53:11.000000000 +0200
+++ vdr-1.3.27-2/ci.h	2005-05-06 05:31:54.000000000 +0200
@@ -115,6 +117,7 @@
   bool ProvidesCa(const unsigned short *CaSystemIds); //XXX Slot???
   bool SetCaPmt(cCiCaPmt &CaPmt, int Slot);
   bool Reset(int Slot);
+  int GetCaFd(void);
   };
 
 #endif //__CI_H
diff -uNr vdr-1.3.27-1/dvbdevice.c vdr-1.3.27-2/dvbdevice.c
--- vdr-1.3.27-1/dvbdevice.c	2005-04-23 04:53:11.000000000 +0200
+++ vdr-1.3.27-2/dvbdevice.c	2005-05-06 05:31:54.000000000 +0200
@@ -486,14 +486,38 @@
   return fd_video >= 0 && fd_audio >= 0;
 }
 
+#include "plugin.h"
+#define RE_NAME "reelcam"
+#define RE_MAGIC { 0,'R','E',0xc4,0x5e,0xa1 }
+
+struct ReLink {
+  char magic[6];
+  const cDevice *dev;
+  unsigned short *caids;
+  const cChannel *channel;
+  int num;
+};
+
 int cDvbDevice::ProvidesCa(const cChannel *Channel) const
 {
-  if (Channel->Ca() >= 0x0100 && ciHandler) {
-     unsigned short ids[MAXCAIDS + 1];
-     for (int i = 0; i <= MAXCAIDS; i++) // '<=' copies the terminating 0!
-         ids[i] = Channel->Ca(i);
-     return ciHandler->ProvidesCa(ids);
-     }
+  if (Channel->Ca() >= 0x0100) {
+    unsigned short ids[MAXCAIDS + 1];
+    for (int i = 0; i <= MAXCAIDS; i++) // '<=' copies the terminating 0!
+      ids[i] = Channel->Ca(i);
+    /* return cDevice::GetDevice(0)->CiHandler()->ProvidesCa(ids); // this is not enough, we have to check if the CAM is already used*/
+    struct ReLink link = { RE_MAGIC,this,ids,Channel,0 };
+    cPlugin *p = cPluginManager::GetPlugin(RE_NAME);
+/*    int n;
+      if(ciHandler && (n=ciHandler->ProvidesCa(ids))) 
+        return n;
+      else if(p) {
+*/
+      if(p){
+        // check if reelcam provides the ID (ugly hack!)
+        p->SetupParse((const char *)&link,"");
+        return link.num;
+      }
+  }
   return cDevice::ProvidesCa(Channel);
 }
 
diff -uNr vdr-1.3.27-1/pat.c vdr-1.3.27-2/pat.c
--- vdr-1.3.27-1/pat.c	2005-04-23 04:53:12.000000000 +0200
+++ vdr-1.3.27-2/pat.c	2005-09-07 17:57:21.000000000 +0200
@@ -158,7 +158,7 @@
      for (cCaDescriptor *d = caDescriptors.First(); d; d = caDescriptors.Next(d)) {
          const unsigned short *caids = CaSystemIds;
          do {
-            if (d->CaSystem() == *caids) {
+            if (*CaSystemIds == 0xFFFF || d->CaSystem() == *caids) {
                if (length + d->Length() <= BufSize) {
                   if (IsStream >= 0 && IsStream != d->Stream())
                      dsyslog("CAM: different stream flag in CA descriptors");
